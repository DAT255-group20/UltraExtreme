package ultraextreme.model.util;

import javax.vecmath.Vector2d;

/**
 * A 2d position that is used in the model.
 * 
 * @author Bjorn Persson Mattsson
 * @author Viktor Anderling
 * 
 */
public class Position {

	private Vector2d coordinates;

	public Position() {
		this(0, 0);
	}

	public Position(final Position position) {
		this(position.getX(), position.getY());
	}

	public Position(final double x, final double y) {
		coordinates = new Vector2d(x, y);
	}

	public void setX(final double x) {
		coordinates.x = x;
	}

	public void setY(final double y) {
		coordinates.y = y;
	}

	public void setPosition(Position position) {
		coordinates.x = position.getX();
		coordinates.y = position.getY();
	}

	public double getX() {
		return coordinates.x;
	}

	public double getY() {
		return coordinates.y;
	}

	@Override
	public int hashCode() {
		// Generated by Eclipse
		final int prime = 127;
		int result = 1;
		result = prime * result
				+ ((coordinates == null) ? 0 : coordinates.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		// Generated by Eclipse
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Position other = (Position) obj;
		if (coordinates == null) {
			if (other.coordinates != null)
				return false;
		} else if (!coordinates.equals(other.coordinates))
			return false;
		return true;
	}
}